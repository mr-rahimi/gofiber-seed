package main

import (
	"{{getModuleName directoryName}}/api"
	"{{getModuleName directoryName}}/wiring"
	"log"

	"github.com/gofiber/fiber/v2"
	"github.com/gofiber/fiber/v2/middleware/cors"
	"github.com/gofiber/fiber/v2/middleware/logger"
)

func main() {
	
	// Setup application dependencies
	useCases, err := wiring.SetupUseCases()
	if err != nil {
		log.Fatal("Failed to setup use cases:", err)
	}

	// Create Fiber app
	app := fiber.New(fiber.Config{
		ErrorHandler: func(c *fiber.Ctx, err error) error {
			code := fiber.StatusInternalServerError
			if e, ok := err.(*fiber.Error); ok {
				code = e.Code
			}
			return c.Status(code).JSON(fiber.Map{
				"error": err.Error(),
			})
		},
	})

	// Middleware
	app.Use(cors.New())
	app.Use(logger.New())

	// Setup routes
	api.ConfigApiRoutes(app, useCases)

	// Start server
	log.Printf("Server starting on :3000")
	log.Fatal(app.Listen(":3000"))
}
